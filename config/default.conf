# kafka producer     
producer.metadata.broker.list=kafka:9092
producer.compression.codec=gzip
producer.retry.backoff.ms:integer=200
producer.message.send.max.retries:integer=10
producer.socket.keepalive.enable:boolean=true
producer.queue.buffering.max.messages:integer=100000
producer.queue.buffering.max.ms:integer=1000
producer.batch.num.messages:integer=1000000
producer.dr_cb:boolean=true
producer.enable.idempotence:boolean=false
producer.max.in.flight.requests.per.connection:integer=1000000

# kafka consumer  
consumer.group.id=dojot-cron-group
consumer.client.id=dojot-cron-client
consumer.metadata.broker.list=kafka:9092
consumer.max.in.flight.requests.per.connection:integer=1000000
consumer.socket.keepalive.enable:boolean=false
    
# kafka topic
topic.acks:integer=-1
topic.auto.offset.reset=earliest
      
# kafka dojot
dojot.subscriptionHoldoff:integer=2500
dojot.timeoutSleep:integer=5
dojot.connectionRetries:integer=5
      
# sdk consumer
sdkConsumer.in.processing.max.messages:integer=1
sdkConsumer.queued.max.messages.bytes:integer=10485760
sdkConsumer.subscription.backoff.min.ms:integer=1000
sdkConsumer.subscription.backoff.max.ms:integer=60000
sdkConsumer.subscription.backoff.delta.ms:integer=1000
sdkConsumer.commit.interval.ms:integer=5000

# sdk producer    
sdkProducer.connect.timeout.ms:integer=5000
sdkProducer.disconnect.timeout.ms:integer=10000
sdkProducer.flush.timeout.ms:integer=2000
sdkProducer.pool.interval.ms:integer=100

# databroker
databroker.url=http://data-broker
databroker.timeoutSleep:integer=2
databroker.connectionRetries:integer=5

# auth
auth.url=http://auth:5000
auth.timeoutSleep:integer=5
auth.connectionRetries:integer=5

# deviceManager
deviceManager.url=http://device-manager:5000
deviceManager.timeoutSleep:integer=5
deviceManager.connectionRetries:integer=3

# dojot management
dojot.management.user=dojot-management
dojot.management.tenant=dojot-management

# dojot subjects
dojot.subjects.tenancy=dojot.tenancy
dojot.subjects.devices=dojot.device-manager.device
dojot.subjects.deviceData=device-data

# dojot events tenantEvent
dojot.events.tenantEvent.NEW_TENANT=new-tenant
dojot.events.tenantEvent.DELETE_TENANT=delete-tenant

# dojot events tenantActionType
dojot.events.tenantActionType.CREATE=create
dojot.events.tenantActionType.DELETE=delete

# cronManager actions
actions.http.allowedBaseURLs:string[]=["http://device-manager:5000"]
actions.http.timeout:integer=5000
actions.broker.allowedSubjects:string[]=["dojot.device-manager.device", "device-data"]

# cronManager db
db.mongodb.url=mongodb://mongodb:27017
dbOptions.useNewUrlParser:boolean=true
dbOptions.connectTimeoutMS:integer=2500
dbOptions.replicaSet:boolean=false
dbOptions.useUnifiedTopology:boolean=true

# healthChecker timeout
healthChecker.timeout.uptime:integer=300000
healthChecker.timeout.memory:integer=300000
healthChecker.timeout.cpu:integer=300000
healthChecker.timeout.mongodb:integer=30000
healthChecker.timeout.kafka:integer=30000
healthChecker.kafka.interval.ms:integer=30000

# logger
logger.verbose:boolean=true
logger.console.level=debug
logger.file.enable:boolean=true
logger.file.filename=CRON.log
logger.file.level=debug

# Lightship
lightship.detect.kubernetes:boolean=false
